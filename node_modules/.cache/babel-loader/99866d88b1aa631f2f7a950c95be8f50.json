{"ast":null,"code":"var _jsxFileName = \"/Users/aldwin/Desktop/fullstackAcademy/Projects/StrangerThings/src/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cohort = \"2208-ftb-et-web-ft\";\nconst strangerThings = \"https://strangers-things.herokuapp.com/api\";\n\nconst App = () => {\n  _s();\n\n  const [allPosts, setAllPosts] = useState([]);\n  const [newUser, setNewUser] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [LoginName, setLoginName] = useState(\"\");\n  const [LoginPassword, setLoginPassword] = useState(\"\"); //cant use API if no useEffect?\n\n  useEffect(() => {\n    const getAllData = async () => {\n      await getAllPosts();\n    };\n\n    getAllData();\n  }, []);\n\n  const getAllPosts = async () => {\n    const response = await fetch(`${strangerThings}/${cohort}/posts`);\n    const data = await response.json();\n    setAllPosts(data.data.posts);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log(\"NAME AND PASSWORD\", newUser, newPassword); // console.log(\"registerUser\");\n\n    const response = await fetch(`${strangerThings}/${cohort}/users/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: {\n          username: newUser,\n          password: newPassword\n        }\n      })\n    });\n    const data = await response.json();\n    console.log(\"data\", data);\n    console.log(\"data2\", data.data.token);\n    setNewUser(\"\");\n    setNewPassword(\"\");\n  };\n\n  const loginSubmit = async event => {\n    event.preventDefault();\n    console.log(\"LoginSubmit\");\n    const response = await fetch(`${strangerThings}/${cohort}/users/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: {\n          username: LoginName,\n          password: LoginPassword\n        }\n      })\n    });\n    const data = await response.json();\n    console.log(\"loginData\", data);\n    let token = await data.data.token;\n    localStorage.setItem(\"token\", JSON.stringify(token));\n  }; //register user\n  // const registerUser = async () => {\n  //   // console.log(\"registerUser\");\n  //   const response = await fetch(`${strangerThings}/${cohort}/users/register`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({\n  //       user: {\n  //         username: { newUser },\n  //         password: { newPassword },\n  //       },\n  //     }),\n  //   });\n  //   const data = await response.json();\n  //   // console.log(data);\n  // };\n  //registerUser();\n  //submit component\n  // const afterSubmit = () => {\n  //   alert(\"Hello\");\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello from Stranger Things\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newUser,\n          onChange: event => {\n            setNewUser(event.target.value); // console.log(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), \"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newPassword,\n          onChange: event => {\n            setNewPassword(event.target.value); // console.log(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"text\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: loginSubmit,\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: LoginName,\n          onChange: event => {\n            setLoginName(event.target.value); // console.log(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), \"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: LoginPassword,\n          onChange: event => {\n            setLoginPassword(event.target.value); // console.log(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"text\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Title Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), // allPosts.map(post => <div key={post._id})\n      allPosts.map((post, i) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"69T/7H9fRmfO8F/sjOwxBevMZL4=\");\n\n_c = App;\nconst container = document.getElementById(\"app\");\nconst root = createRoot(container);\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 166,\n  columnNumber: 13\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","createRoot","cohort","strangerThings","App","allPosts","setAllPosts","newUser","setNewUser","newPassword","setNewPassword","LoginName","setLoginName","LoginPassword","setLoginPassword","getAllData","getAllPosts","response","fetch","data","json","posts","handleSubmit","event","preventDefault","console","log","method","headers","body","JSON","stringify","user","username","password","token","loginSubmit","localStorage","setItem","target","value","map","post","i","title","container","document","getElementById","root","render"],"sources":["/Users/aldwin/Desktop/fullstackAcademy/Projects/StrangerThings/src/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nconst cohort = \"2208-ftb-et-web-ft\";\nconst strangerThings = \"https://strangers-things.herokuapp.com/api\";\n\nconst App = () => {\n  const [allPosts, setAllPosts] = useState([]);\n  const [newUser, setNewUser] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [LoginName, setLoginName] = useState(\"\");\n  const [LoginPassword, setLoginPassword] = useState(\"\");\n\n  //cant use API if no useEffect?\n  useEffect(() => {\n    const getAllData = async () => {\n      await getAllPosts();\n    };\n    getAllData();\n  }, []);\n\n  const getAllPosts = async () => {\n    const response = await fetch(`${strangerThings}/${cohort}/posts`);\n    const data = await response.json();\n    setAllPosts(data.data.posts);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(\"NAME AND PASSWORD\", newUser, newPassword);\n    // console.log(\"registerUser\");\n    const response = await fetch(`${strangerThings}/${cohort}/users/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: newUser,\n          password: newPassword,\n        },\n      }),\n    });\n    const data = await response.json();\n    console.log(\"data\", data);\n    console.log(\"data2\", data.data.token);\n    \n    setNewUser(\"\");\n    setNewPassword(\"\");\n  };\n\n  const loginSubmit = async (event) => {\n    event.preventDefault();\n    console.log(\"LoginSubmit\")\n    const response = await fetch(`${strangerThings}/${cohort}/users/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: LoginName,\n          password: LoginPassword,\n        },\n      }),\n    });\n    const data = await response.json();\n    console.log(\"loginData\", data);\n    let token = await data.data.token;\n\n    localStorage.setItem(\"token\", JSON.stringify(token));\n  };\n\n  //register user\n  // const registerUser = async () => {\n  //   // console.log(\"registerUser\");\n  //   const response = await fetch(`${strangerThings}/${cohort}/users/register`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({\n  //       user: {\n  //         username: { newUser },\n  //         password: { newPassword },\n  //       },\n  //     }),\n  //   });\n  //   const data = await response.json();\n  //   // console.log(data);\n  // };\n\n  //registerUser();\n\n  //submit component\n  // const afterSubmit = () => {\n  //   alert(\"Hello\");\n  // };\n\n  return (\n    <div>\n      <h1>Hello from Stranger Things</h1>\n      <div>\n        <form onSubmit={handleSubmit}>\n          Name:\n          <input\n            type=\"text\"\n            value={newUser}\n            onChange={(event) => {\n              setNewUser(event.target.value);\n              // console.log(event.target.value);\n            }}\n          ></input>\n          Password:\n          <input\n            type=\"text\"\n            value={newPassword}\n            onChange={(event) => {\n              setNewPassword(event.target.value);\n              // console.log(event.target.value);\n            }}\n          ></input>\n          <button type=\"text\">Register</button>\n        </form>\n      </div>\n\n      <div>\n        {/* Login Submit Form */}\n        <form onSubmit={loginSubmit}>\n          Name:\n          <input\n            type=\"text\"\n            value={LoginName}\n            onChange={(event) => {\n              setLoginName(event.target.value);\n              // console.log(event.target.value);\n            }}\n          ></input>\n          Password:\n          <input\n            type=\"text\"\n            value={LoginPassword}\n            onChange={(event) => {\n              setLoginPassword(event.target.value);\n              // console.log(event.target.value);\n            }}\n          ></input>\n          <button type=\"text\">Log In</button>\n        </form>\n      </div>\n      <div>\n        <h1>Title Posts</h1>\n        {\n          // allPosts.map(post => <div key={post._id})\n\n          allPosts.map((post, i) => {\n            return <p key={i}>{post.title}</p>;\n          })\n        }\n      </div>\n    </div>\n  );\n};\n\nconst container = document.getElementById(\"app\");\nconst root = createRoot(container);\nroot.render(<App />);\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AACA,MAAMC,MAAM,GAAG,oBAAf;AACA,MAAMC,cAAc,GAAG,4CAAvB;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD,CALgB,CAOhB;;EACAD,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAG,YAAY;MAC7B,MAAMC,WAAW,EAAjB;IACD,CAFD;;IAGAD,UAAU;EACX,CALQ,EAKN,EALM,CAAT;;EAOA,MAAMC,WAAW,GAAG,YAAY;IAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEf,cAAe,IAAGD,MAAO,QAA7B,CAA5B;IACA,MAAMiB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACAd,WAAW,CAACa,IAAI,CAACA,IAAL,CAAUE,KAAX,CAAX;EACD,CAJD;;EAMA,MAAMC,YAAY,GAAG,MAAOC,KAAP,IAAiB;IACpCA,KAAK,CAACC,cAAN;IACAC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCnB,OAAjC,EAA0CE,WAA1C,EAFoC,CAGpC;;IACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEf,cAAe,IAAGD,MAAO,iBAA7B,EAA+C;MACzEyB,MAAM,EAAE,MADiE;MAEzEC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFgE;MAKzEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,IAAI,EAAE;UACJC,QAAQ,EAAE1B,OADN;UAEJ2B,QAAQ,EAAEzB;QAFN;MADa,CAAf;IALmE,CAA/C,CAA5B;IAYA,MAAMU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACAK,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBP,IAApB;IACAM,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,IAAI,CAACA,IAAL,CAAUgB,KAA/B;IAEA3B,UAAU,CAAC,EAAD,CAAV;IACAE,cAAc,CAAC,EAAD,CAAd;EACD,CAtBD;;EAwBA,MAAM0B,WAAW,GAAG,MAAOb,KAAP,IAAiB;IACnCA,KAAK,CAACC,cAAN;IACAC,OAAO,CAACC,GAAR,CAAY,aAAZ;IACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEf,cAAe,IAAGD,MAAO,cAA7B,EAA4C;MACtEyB,MAAM,EAAE,MAD8D;MAEtEC,OAAO,EAAE;QACP,gBAAgB;MADT,CAF6D;MAKtEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,IAAI,EAAE;UACJC,QAAQ,EAAEtB,SADN;UAEJuB,QAAQ,EAAErB;QAFN;MADa,CAAf;IALgE,CAA5C,CAA5B;IAYA,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACAK,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBP,IAAzB;IACA,IAAIgB,KAAK,GAAG,MAAMhB,IAAI,CAACA,IAAL,CAAUgB,KAA5B;IAEAE,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BR,IAAI,CAACC,SAAL,CAAeI,KAAf,CAA9B;EACD,CApBD,CA7CgB,CAmEhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;;;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,uBACE;QAAM,QAAQ,EAAEb,YAAhB;QAAA,iCAEE;UACE,IAAI,EAAC,MADP;UAEE,KAAK,EAAEf,OAFT;UAGE,QAAQ,EAAGgB,KAAD,IAAW;YACnBf,UAAU,CAACe,KAAK,CAACgB,MAAN,CAAaC,KAAd,CAAV,CADmB,CAEnB;UACD;QANH;UAAA;UAAA;UAAA;QAAA,QAFF,4BAWE;UACE,IAAI,EAAC,MADP;UAEE,KAAK,EAAE/B,WAFT;UAGE,QAAQ,EAAGc,KAAD,IAAW;YACnBb,cAAc,CAACa,KAAK,CAACgB,MAAN,CAAaC,KAAd,CAAd,CADmB,CAEnB;UACD;QANH;UAAA;UAAA;UAAA;QAAA,QAXF,eAmBE;UAAQ,IAAI,EAAC,MAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAnBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eA0BE;MAAA,uBAEE;QAAM,QAAQ,EAAEJ,WAAhB;QAAA,iCAEE;UACE,IAAI,EAAC,MADP;UAEE,KAAK,EAAEzB,SAFT;UAGE,QAAQ,EAAGY,KAAD,IAAW;YACnBX,YAAY,CAACW,KAAK,CAACgB,MAAN,CAAaC,KAAd,CAAZ,CADmB,CAEnB;UACD;QANH;UAAA;UAAA;UAAA;QAAA,QAFF,4BAWE;UACE,IAAI,EAAC,MADP;UAEE,KAAK,EAAE3B,aAFT;UAGE,QAAQ,EAAGU,KAAD,IAAW;YACnBT,gBAAgB,CAACS,KAAK,CAACgB,MAAN,CAAaC,KAAd,CAAhB,CADmB,CAEnB;UACD;QANH;UAAA;UAAA;UAAA;QAAA,QAXF,eAmBE;UAAQ,IAAI,EAAC,MAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAnBF;MAAA;QAAA;QAAA;QAAA;MAAA;IAFF;MAAA;MAAA;MAAA;IAAA,QA1BF,eAkDE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAGI;MAEAnC,QAAQ,CAACoC,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;QACxB,oBAAO;UAAA,UAAYD,IAAI,CAACE;QAAjB,GAAQD,CAAR;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAFD,CALJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAlDF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA+DD,CA5JD;;GAAMvC,G;;KAAAA,G;AA8JN,MAAMyC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAlB;AACA,MAAMC,IAAI,GAAG/C,UAAU,CAAC4C,SAAD,CAAvB;AACAG,IAAI,CAACC,MAAL,eAAY,QAAC,GAAD;EAAA;EAAA;EAAA;AAAA,QAAZ"},"metadata":{},"sourceType":"module"}