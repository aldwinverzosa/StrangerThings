{"ast":null,"code":"var _jsxFileName = \"/Users/aldwin/Desktop/fullstackAcademy/Projects/StrangerThings/src/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cohort = \"2208-ftb-et-web-ft\";\nconst strangerThings = \"https://strangers-things.herokuapp.com/api\";\n\nconst App = () => {\n  _s();\n\n  const [allPosts, setAllPosts] = useState([]);\n  const [newUser, setNewUser] = useState(\"\"); //cant use API if no useEffect?\n\n  useEffect(() => {\n    const getAllData = async () => {\n      await getAllPosts();\n    };\n\n    getAllData();\n  }, []);\n\n  const getAllPosts = async () => {\n    const response = await fetch(`${strangerThings}/${cohort}/posts`);\n    const data = await response.json();\n    setAllPosts(data.data.posts);\n  };\n\n  const handleChange = event => {\n    setNewUser(event.target.value);\n    console.log(\"USER is : \", event.target.value);\n  }; //register user\n\n\n  const registerUser = async () => {\n    console.log(\"registerUser\");\n    const response = await fetch(`${strangerThings}/${cohort}/users/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: {\n          username: \"aldwin3\",\n          password: \"krypton2\"\n        }\n      })\n    });\n    const data = await response.json();\n    console.log(data);\n  };\n\n  registerUser(); //submit component\n\n  const afterSubmit = () => {\n    alert(\"Hello\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello from Stranger Things\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [\"Name:\", \"\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"newUser\",\n        name: \"newUser\",\n        onChange: handleChange,\n        value: newUser,\n        children: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: registerUser,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: // allPosts.map(post => <div key={post._id})\n      allPosts.map((post, i) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.title\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"IlzFI/9UDX2OlOZ2+aoyWBdmJwg=\");\n\n_c = App;\nconst container = document.getElementById(\"app\");\nconst root = createRoot(container);\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 87,\n  columnNumber: 13\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","createRoot","cohort","strangerThings","App","allPosts","setAllPosts","newUser","setNewUser","getAllData","getAllPosts","response","fetch","data","json","posts","handleChange","event","target","value","console","log","registerUser","method","headers","body","JSON","stringify","user","username","password","afterSubmit","alert","map","post","i","title","container","document","getElementById","root","render"],"sources":["/Users/aldwin/Desktop/fullstackAcademy/Projects/StrangerThings/src/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nconst cohort = \"2208-ftb-et-web-ft\";\nconst strangerThings = \"https://strangers-things.herokuapp.com/api\";\n\nconst App = () => {\n  const [allPosts, setAllPosts] = useState([]);\n  const [newUser, setNewUser] = useState(\"\");\n\n  //cant use API if no useEffect?\n  useEffect(() => {\n    const getAllData = async () => {\n      await getAllPosts();\n    };\n    getAllData();\n  }, []);\n\n  const getAllPosts = async () => {\n    const response = await fetch(`${strangerThings}/${cohort}/posts`);\n    const data = await response.json();\n    setAllPosts(data.data.posts);\n  };\n\n  const handleChange = (event) => {\n    setNewUser(event.target.value);\n    console.log(\"USER is : \", event.target.value);\n  };\n\n  //register user\n  const registerUser = async () => {\n    console.log(\"registerUser\");\n    const response = await fetch(`${strangerThings}/${cohort}/users/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: \"aldwin3\",\n          password: \"krypton2\",\n        },\n      }),\n    });\n    const data = await response.json();\n    console.log(data);\n  };\n\n  registerUser();\n\n  //submit component\n  const afterSubmit = () => {\n    alert(\"Hello\");\n  };\n\n  return (\n    <div>\n      <h1>Hello from Stranger Things</h1>\n      <form>\n        Name:{\"\"}\n        <input\n          type=\"text\"\n          id=\"newUser\"\n          name=\"newUser\"\n          onChange={handleChange}\n          value={newUser}\n        >\n          {\"\"}\n        </input>\n        Password: <input></input>\n        <button onClick={registerUser}>Register</button>\n      </form>\n      <div>\n        {\n          // allPosts.map(post => <div key={post._id})\n\n          allPosts.map((post, i) => {\n            return <p key={i}>{post.title}</p>;\n          })\n        }\n      </div>\n    </div>\n  );\n};\n\nconst container = document.getElementById(\"app\");\nconst root = createRoot(container);\nroot.render(<App />);\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AACA,MAAMC,MAAM,GAAG,oBAAf;AACA,MAAMC,cAAc,GAAG,4CAAvB;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC,CAFgB,CAIhB;;EACAD,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,YAAY;MAC7B,MAAMC,WAAW,EAAjB;IACD,CAFD;;IAGAD,UAAU;EACX,CALQ,EAKN,EALM,CAAT;;EAOA,MAAMC,WAAW,GAAG,YAAY;IAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,cAAe,IAAGD,MAAO,QAA7B,CAA5B;IACA,MAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACAR,WAAW,CAACO,IAAI,CAACA,IAAL,CAAUE,KAAX,CAAX;EACD,CAJD;;EAMA,MAAMC,YAAY,GAAIC,KAAD,IAAW;IAC9BT,UAAU,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;IACAC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,KAAK,CAACC,MAAN,CAAaC,KAAvC;EACD,CAHD,CAlBgB,CAuBhB;;;EACA,MAAMG,YAAY,GAAG,YAAY;IAC/BF,OAAO,CAACC,GAAR,CAAY,cAAZ;IACA,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,cAAe,IAAGD,MAAO,iBAA7B,EAA+C;MACzEqB,MAAM,EAAE,MADiE;MAEzEC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFgE;MAKzEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,IAAI,EAAE;UACJC,QAAQ,EAAE,SADN;UAEJC,QAAQ,EAAE;QAFN;MADa,CAAf;IALmE,CAA/C,CAA5B;IAYA,MAAMjB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACAM,OAAO,CAACC,GAAR,CAAYR,IAAZ;EACD,CAhBD;;EAkBAS,YAAY,GA1CI,CA4ChB;;EACA,MAAMS,WAAW,GAAG,MAAM;IACxBC,KAAK,CAAC,OAAD,CAAL;EACD,CAFD;;EAIA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,oBACQ,EADR,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,SAFL;QAGE,IAAI,EAAC,SAHP;QAIE,QAAQ,EAAEhB,YAJZ;QAKE,KAAK,EAAET,OALT;QAAA,UAOG;MAPH;QAAA;QAAA;QAAA;MAAA,QAFF,6BAWY;QAAA;QAAA;QAAA;MAAA,QAXZ,eAYE;QAAQ,OAAO,EAAEe,YAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAZF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAgBE;MAAA,UAEI;MAEAjB,QAAQ,CAAC4B,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,KAAa;QACxB,oBAAO;UAAA,UAAYD,IAAI,CAACE;QAAjB,GAAQD,CAAR;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAFD;IAJJ;MAAA;MAAA;MAAA;IAAA,QAhBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD,CA7ED;;GAAM/B,G;;KAAAA,G;AA+EN,MAAMiC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAlB;AACA,MAAMC,IAAI,GAAGvC,UAAU,CAACoC,SAAD,CAAvB;AACAG,IAAI,CAACC,MAAL,eAAY,QAAC,GAAD;EAAA;EAAA;EAAA;AAAA,QAAZ"},"metadata":{},"sourceType":"module"}